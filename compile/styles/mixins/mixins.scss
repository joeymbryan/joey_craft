// Last Updated Apr 2014

// ------------------------------------------- //
//
// Clearfix
//
// // http://css-tricks.com/snippets/css/clear-fix/
//
// ------------------------------------------- //
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// ------------------------------------------- //
//
// Gradient
//
// The $to argument is a direction. Ex:
// $to: top right, $to: bottom left, $to: left
//
// http://css-tricks.com/css3-gradients/
// http://www.css3files.com/gradient/
//
// ------------------------------------------- //
@mixin gradient($color1, $color2, $to: false) {
  // Fallback (could use .jpg/.png alternatively)
  background-color: $color1;
  // Safari 4, Chrome 1-9, iOS 3.2-4.3, Android 2.1-3.0
  background-image: -webkit-gradient(linear, $to, top, from($color1), to($color2));
  // IE 8-9
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient (GradientType=0, startColorstr=#{$color1}, endColorstr=#{$color2})";
  // Modern
  @if $to != false {
    background-image: -moz-linear-gradient(to $to, $color1, $color2);
    background-image: -webkit-linear-gradient(to $to, $color1, $color2);
    background-image: linear-gradient(to $to, $color1, $color2);
  }
  @else {
    background-image: -moz-linear-gradient($color1, $color2);
    background-image: -webkit-linear-gradient($color1, $color2);
    background-image: linear-gradient($color1, $color2);
  }
}

// ------------------------------------------- //
//
// Animation
//
// Pass string of values to animation props Ex:
// $values: 100ms infinite ease-in-out
// $values: rotate(50deg)
//
// http://css-tricks.com/css3-gradients/
// http://www.css3files.com/gradient/
// http://desandro.github.io/3dtransforms/
//
// ------------------------------------------- //
@mixin transition($values) {
  -webkit-transition: $values;
  -moz-transition: $values;
  -o-transition: $values;
  -ms-transition: $values;
  transition: $values;
}

@mixin transform($values) {
  -webkit-transform: $values;
  -moz-transform: $values;
  -o-transform: $values;
  -ms-transform: $values;
  transform: $values;
}

// ------------------------------------------- //
//
// Min Width
//
// min-width media query mixin
//
// ------------------------------------------- //
@mixin min-width($size) {
  @media only screen and (min-width: $size * 1px) {
    @content;
  }
}

// ------------------------------------------- //
//
// Max Width
//
// max-width media query mixin
//
// ------------------------------------------- //
@mixin max-width($size) {
  @media only screen and (max-width: $size * 1px) {
    @content;
  }
}

// ------------------------------------------- //
//
// Opacity
//
// ------------------------------------------- //
@mixin opacity($value) {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$value})";
  filter: alpha(opacity = $value);
  opacity: $value / 100;
}
